modulejs.define 'HBWTranslator', ['jQuery'], (jQuery) ->
  translations = <%= I18n.t('hbw.js').to_json %>

  translate: (key, vars = {}) ->
    current = translations

    for part in key.split('.')
      if jQuery.isPlainObject(current) and part of current
        current = @interpolateString(current[part], vars)
      else
        throw new Error('Cannot find ' + key + ' in translations')

    current

  interpolateString: (str, vars) ->
    re = /%{(\w+)}/g
    places = []

    found = re.exec(str)
    until found is null
      places.push(found[1])
      found = re.exec(str)
    for place in places
      template = new RegExp('%{' + place + '}', 'g')
      if vars[place]
        str = str.replace(template, vars[place])
      else
        throw new Error('Undefined variable ' + place)

    str
